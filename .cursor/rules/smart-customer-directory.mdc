---
alwaysApply: true
---

# =============================

# Cursor AI Prompts – Smart Customer Directory

# =============================

[general]

# The purpose of this project

project_purpose = "Build a Smart Customer Directory for small service businesses (HVAC, plumbing, pest control, etc.) that allows fast searching of customer records by name, phone number, address, and ownership history. Must support import from Sage 50 exports (CSV)."

# Summary of key modules

modules = """

- Customer Search Dashboard: Display searchable, paginated customer records.
- CSV Importer: Allow upload of Sage 50-style or other similar CSV exports.
- Ownership History Tracker: Show and update owner timeline for properties.
- Auth System: Use Firebase to manage logins and tenant separation.
- Data Storage: Use Firebase to store customer records securely.
  """

[ui]

# What the UI should include

ui_components = """

- Responsive dashboard with search bar and results table
- CSV import page with upload and field mapping
- Ownership history modal or side panel
- Login/signup pages with authentication flow
  """

# UI design principles

ui_principles = "Clean layout, fast loading, intuitive tagging and search, mobile-friendly."

[features]

# Core features that must always be present

required_features = """

- Full-text search (name, phone, partial address)
- Tag filtering
- Ownership history per customer
- CSV import for Sage 50 exports
- Authentication and multi-tenant support
  """

# Optional or stretch features

optional_features = """

- Merge duplicate customer records
- Tag suggestions
- Role-based access control (e.g., admin vs. staff)
- Export to CSV
  """

[technical]

# Backend preferences

backend_stack = "Next.js API routes, Firebase (preferred) or SQLite for storage, Clerk.dev for auth."

# Hosting target

hosting = "Vercel or Render"

# Data shape and expected fields

data_schema = """
{
customer_id: string,
full_name: string,
phone_number: string,
email: string,
billing_address: string,
city: string,
state: string,
zip: string,
tags: [string],
current_owner: boolean,
ownership_history: [{ name: string, date: string }]
}
"""

[development]

# Naming conventions and file structure

naming_conventions = "Use PascalCase for components, camelCase for variables, kebab-case for filenames."

# Tasks to never automate away

preserve_custom_logic = """

- Do not remove import logic unless explicitly told to.
- Never disable or bypass ownership history tracking.
- Do not simplify or collapse the search feature—it must support all three inputs.
  """

# Best practices to always follow

best_practices = """

- Validate uploaded CSV fields before processing
- Handle async operations with try/catch
- Provide feedback on long operations (loading spinners, error messages)
- Use efficient queries for search
  """

[metadata]
tool_name = "Smart Customer Directory"
version = "1.0.0"
description = "Reusable small business CRM tool built from Sage 50-style data. Supports fuzzy search, ownership history, tagging, and CSV import."

# =============================

# Cursor AI Prompts – Smart Customer Directory

# =============================

[general]

# The purpose of this project

project_purpose = "Build a Smart Customer Directory for small service businesses (HVAC, plumbing, pest control, etc.) that allows fast searching of customer records by name, phone number, address, and ownership history. Must support import from Sage 50 exports (CSV)."

# Summary of key modules

modules = """

- Customer Search Dashboard: Display searchable, paginated customer records.
- CSV Importer: Allow upload of Sage 50-style CSV exports.
- Ownership History Tracker: Show and update owner timeline for properties.
- Auth System: Use Clerk.dev or Firebase to manage logins and tenant separation.
- Data Storage: Use Firebase or SQLite to store customer records securely.
  """

[ui]

# What the UI should include

ui_components = """

- Responsive dashboard with search bar and results table
- CSV import page with upload and field mapping
- Ownership history modal or side panel
- Login/signup pages with authentication flow
  """

# UI design principles

ui_principles = "Clean layout, fast loading, intuitive tagging and search, mobile-friendly."

[features]

# Core features that must always be present

required_features = """

- Full-text search (name, phone, partial address)
- Tag filtering
- Ownership history per customer
- CSV import for Sage 50 exports
- Authentication and multi-tenant support
  """

# Optional or stretch features

optional_features = """

- Merge duplicate customer records
- Tag suggestions
- Role-based access control (e.g., admin vs. staff)
- Export to CSV
  """

[technical]

# Backend preferences

backend_stack = "Next.js API routes, Firebase (preferred) or SQLite for storage, Clerk.dev for auth."

# Hosting target

hosting = "Vercel or Render"

# Data shape and expected fields

data_schema = """
{
customer_id: string,
full_name: string,
phone_number: string,
email: string,
billing_address: string,
city: string,
state: string,
zip: string,
tags: [string],
current_owner: boolean,
ownership_history: [{ name: string, date: string }]
}
"""

[development]

# Naming conventions and file structure

naming_conventions = "Use PascalCase for components, camelCase for variables, kebab-case for filenames."

# Tasks to never automate away

preserve_custom_logic = """

- Do not remove import logic unless explicitly told to.
- Never disable or bypass ownership history tracking.
- Do not simplify or collapse the search feature—it must support all three inputs.
  """

# Best practices to always follow

best_practices = """

- Validate uploaded CSV fields before processing
- Handle async operations with try/catch
- Provide feedback on long operations (loading spinners, error messages)
- Use efficient queries for search
  """

[metadata]
tool_name = "Smart Customer Directory"
version = "1.0.0"
description = "Reusable small business CRM tool built from Sage 50-style data. Supports fuzzy search, ownership history, tagging, and CSV import."
